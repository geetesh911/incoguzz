# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

enum AccountType {
  ANONYMOUS
  PRIVATE
  PUBLIC
}

input AddClipPostInput {
  audioId: String
  caption: String
  place: PlaceInput
  published: Boolean
  tags: [String!]
  type: PostType!
}

input AddMediaPostInput {
  caption: String
  place: PlaceInput
  published: Boolean
  tags: [String!]
  type: PostType!
}

input AddPollPostInput {
  pollOptions: [PollOptionInput!]
  pollQuestion: String
  published: Boolean
  tags: [String!]
  type: PostType!
}

input AddTextualPostInput {
  published: Boolean
  tags: [String!]
  text: String
  type: PostType!
}

type Audio {
  id: String!
  postId: String!
  thumbnailUrl: String
  url: String!
}

type Bookmark {
  createdAt: DateTime!
  id: String!
  postId: String!
  updatedAt: DateTime!
  userId: String!
}

type BookmarkOutput {
  createdAt: DateTime!
  id: String!
  post: PostOutput!
  postId: String!
  updatedAt: DateTime!
  userId: String!
}

type BookmarkPostOutput {
  bookmarked: Boolean!
  postId: String!
}

type BookmarksOutput {
  data: [BookmarkOutput!]!
  pagination: PaginationOutput!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

type ClipAudio {
  _count: ClipAudioCount
  audioUrl: String!
  id: String!
  name: String!
}

type ClipAudioCount {
  clips: Int!
}

type ClipOutput {
  clipAudio: ClipAudio!
  id: String!
  thumbnailUrl: String!
  url: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input ForgotPasswordInput {
  emailOrUsername: String!
}

type ForgotPasswordOutput {
  email: String!
  isVerified: Boolean
  message: String!
  verificationTokenId: String
  verificationUuid: String
}

enum Gender {
  FEMALE
  MALE
}

type GetPostsOutput {
  data: [PostOutput!]!
  pagination: PaginationOutput!
}

input GoogleAuthInput {
  googleAccessToken: String!
  username: String
}

type GoogleAuthOutput {
  accessToken: String
  email: String!
  id: String!
  isVerified: Boolean!
  refreshToken: String
  username: String!
}

enum InterestedInTypes {
  FEMALE
  MEN
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input LoginInput {
  emailOrUsername: String!
  password: String!
}

type LoginOutput {
  accessToken: String!
  email: String!
  id: String!
  profile: Profile!
  refreshToken: String!
  username: String!
}

type Mutation {
  addClipPost(addClipPostInput: AddClipPostInput!, clipAudioMedia: Upload!, clipMedia: Upload!): Post!
  addMediaPost(addMediaPostInput: AddMediaPostInput!, media: [Upload!]!, mediaThumbnail: Upload): Post!
  addPollPost(addPollPostInput: AddPollPostInput!): Post!
  addTextualPost(addTextualPostInput: AddTextualPostInput!): Post!
  bookmarkPost(postId: String!): BookmarkPostOutput!
  changePassword(changePasswordInput: ChangePasswordInput!): Boolean!
  changeProfilePicture(picture: Upload!): Boolean!
  deactivateUser: Boolean!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): ForgotPasswordOutput!
  googleAuth(googleAuthInput: GoogleAuthInput!): GoogleAuthOutput!
  incrementPostView(postId: String!): Boolean!
  login(loginInput: LoginInput!): LoginOutput!
  logout: Boolean!
  multipleUploadFile(picture: [Upload!]!): Boolean!
  postReaction(postReactionInput: PostReactionInput!): ReactionOutput!
  removeProfilePicture: Boolean!
  resetPassword(resetPasswordInput: ResetPasswordInput!): ForgotPasswordOutput!
  signUp(signUpInput: SignUpInput!): SignUpOutput!
  singleUpload(picture: Upload!): Boolean!
  updateProfile(profileInput: ProfileInput!): ProfileOutput!
  updateUser(updateUserInput: UpdateUserInput!): UpdateUserOutput!
  verifyForgotPassword(verificationToken: String!): ForgotPasswordOutput
  verifyUserEmail(verificationToken: String!): Boolean
}

input PaginationInput {
  cursor: String
  firstQueryResult: Boolean!
  take: Float!
}

type PaginationOutput {
  cursor: String!
}

type Photo {
  id: String!
  postId: String!
  url: String!
}

type Place {
  _count: PlaceCount
  address: String!
  id: String!
  name: String!
}

type PlaceCount {
  posts: Int!
}

input PlaceInput {
  address: String
  name: String
}

type PollOption {
  _count: PollOptionCount
  id: String!
  option: String!
  pollId: String!
}

type PollOptionCount {
  pollAnswers: Int!
}

input PollOptionInput {
  option: String!
}

type PollOutput {
  id: String!
  pollOptions: [PollOption!]!
  postId: String!
  question: String!
}

type Post {
  _count: PostCount
  archive: Boolean!
  caption: String
  createdAt: DateTime!
  id: String!
  metaTags: JSON
  placeId: String
  published: Boolean!
  slug: String!
  type: PostType!
  updatedAt: DateTime!
  userId: String!
  views: Int!
}

type PostCount {
  activities: Int!
  bookmarks: Int!
  comments: Int!
  message: Int!
  photos: Int!
  reactions: Int!
  tags: Int!
}

type PostOutput {
  _count: PostCount
  audio: Audio
  bookmarks: [Bookmark!]
  caption: String
  clip: ClipOutput
  createdAt: DateTime!
  id: String!
  metaTags: JSON!
  photos: [Photo!]
  place: Place
  poll: PollOutput
  reactions: [Reaction!]
  tags: [Tag!]
  textual: Textual
  type: PostType!
  updatedAt: DateTime!
  userId: String!
  video: Video
  views: Int!
}

input PostReactionInput {
  postId: String!
  reactionType: ReactionType!
}

enum PostType {
  AUDIO
  CLIP
  PHOTO
  POLL
  TEXTUAL
  VIDEO
}

type Profile {
  bio: String
  country: String
  dob: DateTime
  dpUrl: String
  gender: Gender
  id: String!
  interestedIn: InterestedInTypes
  mobileNo: String
  nickname: String!
  relationshipStatus: RelationshipStatus
  userId: String
  website: String
}

input ProfileInput {
  bio: String
  country: String
  dob: DateTime
  gender: Gender
  interestedIn: InterestedInTypes
  mobileNo: String
  nickname: String
  relationshipStatus: RelationshipStatus
  website: String
}

type ProfileOutput {
  bio: String
  country: String
  dob: DateTime
  dpUrl: String
  gender: Gender
  id: String!
  interestedIn: InterestedInTypes
  mobileNo: String
  nickname: String!
  relationshipStatus: RelationshipStatus
  website: String
}

type Query {
  getBookmarkedPosts(paginationInput: PaginationInput!): BookmarksOutput!
  getExplorePosts(paginationInput: PaginationInput!): GetPostsOutput!
  getMediaAccessToken: String!
  getUser: UserOutput
  getUserPosts(paginationInput: PaginationInput!): GetPostsOutput!
  isUsernameAvailable(username: String!): Boolean
  test: String!
  verifyAccessToken(accessToken: String!): Boolean
}

type Reaction {
  createdAt: DateTime!
  id: String!
  postId: String!
  reaction: ReactionType!
  updatedAt: DateTime!
  userId: String!
}

type ReactionOutput {
  createdAt: DateTime!
  deleted: Boolean!
  id: String!
  postId: String!
  reaction: ReactionType!
  updatedAt: DateTime!
  userId: String!
}

enum ReactionType {
  CELEBRATE
  COOL
  FIRE
  LAUGH
  LIKE
}

enum RelationshipStatus {
  DIVORCED
  ENGAGED
  IN_A_RELATIONSHIP
  ITS_COMPLICATED
  MARRIED
  SEPERATED
  SINGLE
  WIDOWED
}

input ResetPasswordInput {
  email: String!
  password: String!
  verificationTokenId: String!
  verificationUuid: String!
}

enum Role {
  ADMIN
  USER
}

input SignUpInput {
  email: String!
  nickname: String!
  password: String!
  username: String!
}

type SignUpOutput {
  email: String!
  id: String!
  isVerified: Boolean!
  username: String!
}

type Tag {
  _count: TagCount
  id: String!
  name: String!
}

type TagCount {
  posts: Int!
}

type Textual {
  id: String!
  postId: String!
  text: String!
}

input UpdateUserInput {
  profile: ProfileInput!
  username: String!
}

type UpdateUserOutput {
  profile: Profile!
  username: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserOutput {
  accountType: AccountType!
  active: Boolean!
  createdAt: DateTime!
  email: String!
  id: String!
  isVerified: Boolean!
  lastLogin: DateTime!
  profile: Profile!
  role: Role!
  updatedAt: DateTime!
  username: String!
}

type Video {
  id: String!
  postId: String!
  thumbnailUrl: String!
  url: String!
}
